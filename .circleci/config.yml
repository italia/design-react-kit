# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2

aliases:
  - &working_directory
    ~/repo

  - &restore_cache
    keys:
    - npm-dependencies-v4-{{ checksum "package.json" }}
    # fallback to using the latest cache if no exact match is found
    - npm-dependencies-v4-

  - &npm_install
    name: Install Packages
    command: yarn

  - &save_cache
    paths:
      - node_modules
    key: npm-dependencies-v4-{{ checksum "package.json" }}

  - &tag_filters
    branches:
      ignore: /.*/
    tags:
      only: /^v?[0-9]+(\.[0-9]+)*/

defaults: &defaults
  docker:
    # specify the version you desire here
    - image: circleci/node:14

  working_directory: *working_directory

jobs:
  build:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Check versions
          command: |
            node --version
            yarn --version
            docker --version

      # Download and cache dependencies
      - restore_cache: *restore_cache
      - run: *npm_install
      - save_cache: *save_cache

      - run:
          name: Build
          command: yarn build

      # Persist the specified paths (workspace/echo-output) into the workspace
      # for use in downstream job. Must be an absolute path, or relative path
      # from working_directory. This is a directory on the container which is
      # taken to be the root directory of the workspace.
      - persist_to_workspace:
          root: *working_directory
          paths:
            - dist

            
  check-gatsby-ssr:
    <<: *defaults

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache: *restore_cache
      - run: *npm_install
      - save_cache: *save_cache

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      - run:
          name: Bind global package folder to local user
          command: |
              mkdir ~/.npm-packages
              npm config set prefix ~/.npm-packages
      - run:
          name: Link the toolkit
          command: yarn link
      - run:
          name: Bootstrap a Gatsby instance
          command: |
            cd ..
            npx gatsby new testing-ssr https://github.com/italia/design-italia-gatsby-starterkit
            cd testing-ssr
            yarn link "design-react-kit"
            yarn build

  deploy-github-pages:
    <<: *defaults

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache: *restore_cache
      - run: *npm_install
      - save_cache: *save_cache

      - run:
          name: Deploy GitHub Pages
          command: |
            git config --global user.email "$GIT_AUTHOR_EMAIL"
            git config --global user.name "$GIT_AUTHOR_NAME"
            yarn storybook:build
            yarn storybook:deploy


  npm-publish:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      - run:
          name: npm publish
          # Mind that --ignore-scripts for publish is supported for npm <= 7 and >= 7.20
          # see https://github.com/npm/cli/issues/2755
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --ignore-scripts

# Workflows enable multiple jobs in parallel
workflows:
  version: 2

  deploy:
    jobs:
      - build:
          # Note: The build job must also have a filters tags section, as it
          # is a transient dependency of the deploy job.
          filters:
            branches:
              ignore:
                  - gh-pages
                  - next
            tags:
              only: /.*/

      - check-gatsby-ssr:
          requires:
            - build
          filters:
            branches:
              ignore:
                - gh-pages

      - deploy-github-pages:
          requires:
            - build
          filters: *tag_filters

      - npm-publish:
          requires:
            - build
          filters: *tag_filters
